2022-2023 版本说明

步兵:

NewINF v6.3.8 RED_STANDARD_1: 新增 步兵 直连 功率限制

NewINF v6.3.9 RED_STANDARD_1: 超级电容功率控制 先走-> 速度自适应底盘功率控制 这条路
NewINF v6.4.0 RED_STANDARD_1: 由之前的 电容剩余容量调控 改为 电压调控
先确定是不是由于 测量值 跳变的原因
不是: 改功率控制
是: 把critical val改低 或 低通滤波

NewINF v6.4.1 RED_STANDARD_1: 继续写
NewINF v6.4.2 RED_STANDARD_1: 继续写2
----NewINF v.... 正式更名为 Inf22_v6.4.2------
Inf22_v6.4.2 完成了超级电容 底盘速度自适应 功率控制
Inf22_v6.4.3 修改了shooter 发射机构状态机的修改流程

NewINF v7.0.0 RED_STANDARD_1: 尝试解决 UI DMA发送

Inf_22_9-21 9-21日前 重写底盘小陀螺 之前的 备份

Inf_22_9-24 用FSM重写简单 小陀螺代码

Inf_22_before git invert 10-2 写的有问题的一版 底盘小陀螺回归程序 以回滚 本地

之后的都是小改

10-28临时改了射速

--------------------------------------------------------------------
英雄:

NewHero v0.1.3 新增 英雄的 不使用超级电容的功率限制
NewHero v0.1.4 7-16测试 完成60J不同功率档位 直接削减目标电流。
在PID计算出四个电机目标电流后，直接乘以一个系数让他们之和小于等于当前可用功率上限

NewHero v0.1.5 速度自适应底盘功率控制
NewHero v0.1.6 速度自适应底盘功率控制 优化+增加新功能 容量太低时 cut off 冲过某一个值时候再enable output
截止9-2-2022英雄还没有底盘超级电容 功率控制
更名为Hero_22 github

10-28临时改了射速

--------------------------------------------------------------------
SuperCapCode v2.9 恢复紫达的板子 RMUL 6-26 用
--------------------------------------------------------------------
CLion_INF_v6.3.7 v6.3.7版本的步兵程序 的CLion项目 正在移植

CLion_STM32_demo1 Type A板的 CLion 项目 正在移植

Infantry_Client_UI 开源的infantry ui 目前在本地桌面的版本 document/Github 中还有一个会传到Github